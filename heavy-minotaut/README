############################################################################################
#											   #
#                          	Heavy MinOTAut						   #
#		- Heavy Minimization algorithms for Tree Automata			   #
#											   #
#	Copyright (c) 2014-16	Ricardo Almeida	(LFCS - University of Edinburgh)	   #
#											   #
############################################################################################



Downloading
===========

To download Heavy MinOTAut, run

$ git clone https://github.com/ric-almeida/heavy-minotaut.git


Pre-requisites
==============

1) libvata (see ../ondrik-libvata/README for installation info; an additional prerequisite of libvata is g++ >= 4.8.0)

2) filesystem library from boost (version >= 1.54.0)


Installation
============

Run $ make minotaut


Input Format
============

libvata so far supports only the Timbuk format of tree automata. The format is
specified by the following grammar with the start symbol <file>:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  <file>            : 'Ops' <label_list> <automaton>

  <label_list>      : <label_decl> <label_decl> ... // a list of label declarations

  <label_decl>      : string ':' int // a symbol declaration (the name and the arity)

  <automaton>       : 'Automaton' string 'States' <state_list> 'Final States' <state_list> 'Transitions' <transition_list>

  <state_list>      : <state> <state> ... // a list of states

  <state>           : string // the name of a state

  <transition_list> : <transition> <transition> ... // a list of transitions

  <transition>      : <label> '(' <state> ',' <state> ',' ... ')' '->' <state> // a transition

  <label>           : string // the name of a label

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

An example could look like this:

~~~~~~~~~~~~~~~~~~~~~
Ops a:0 b:1 c:2

Automaton A
States q0 q1 q2
Final States q2 
Transitions
a() -> q0
b(q0) -> q1
c(q1, q1) -> q1
c(q1, q1) -> q2
c(q2, q2) -> q2
~~~~~~~~~~~~~~~~~~~~~


Usage
=====

Please run ./minotaut -help


Publications
============

- R. Almeida, L. Holik, R. Mayr. Reduction of Non-deterministic Tree Automata. pages 717â€“735. Springer Berlin Heidelberg, Berlin, Heidelberg, 2016. TACAS'16.
- R. Almeida. Reducing Nondeterministic Tree Automata by Adding Transitions. Submitted to MEMICS'16.


